The ``101-lazy_matrix_mul`` module
====================================

Usage
-------

Importing the function from the module

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Multiplying two matrices
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
       [15, 22]])
     
Multiplying matrices example 2
    >>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    array([[13, 16]])

Multiplying matrices example 3
    >>> first = [[1, 3, 8], [3, 5, 2], [4, 2, 9]]
    >>> second = [[1, -3, 4], [2, -1, 1], [3, -1, 0]]
    >>> lazy_matrix_mul(first, second)
        array([[ 31, -14,   7],
        [ 19, -16,  17],
        [ 35, -23,  18]])

Multiplying matrices example 4
    >>> lazy_matrix_mul([[7, 7, 2]], [[4], [3], [7]])
    array([[63]])

Passing None as second argument
    >>> lazy_matrix_mul([[7, 7, 2]], None)
     Traceback (most recent call last):
    ...
    TypeError: Object arrays are not currently supported

Passing None as first argument
    >>> lazy_matrix_mul(None, [4])
    Traceback (most recent call last):
    ...
    TypeError: Object arrays are not currently supported

Passing None as a matrix

    >>> matrix_mul([[7, 12]], None)
    Traceback (most recent call last):
           ...
    TypeError: Object arrays are not currently supported

Passing a tuple as a matrix

    >>> matrix_mul((1, 3, 5), [[1.3], [5.2], [7.7]])
    array([55.4])

Passing a string as a matrix

    >>> matrix_mul([[3, 3], [4, 4]], "Habie")
    Traceback (most recent call last):
           ...
    ValueError: Scalar operands are not allowed, use '*' instead

Passing a list of tuples

   >>> matrix_mul([(1, 5, 10)], [(1), (5)])
   Traceback (most recent call last):
         ...
   ValueError: shapes (1,3) and (2,) not aligned: 3 (dim 1) != 2 (dim 0)

Passing a list of strings

   >>> matrix_mul([[]], ["Habie"])
   Traceback (most recent call last):
         ...
   ValueError: shapes (1,0) and (1,) not aligned: 0 (dim 1) != 1 (dim 0)

Passing an empty matrix

    >>> matrix_mul([], [[1]])
    Traceback (most recent call last):
           ...
    ValueError: shapes (0,) and (1,1) not aligned: 0 (dim 0) != 1 (dim 0)

Passing an empty matrix example 2

    >>> matrix_mul([[1, 2]], [[]])
    Traceback (most recent call last):
           ...
    ValueError: shapes (1,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

Passing a matrix with a list of strings

    >>> matrix_mul([[1, '1', 1], ['2', 2, '2']], [[3], [3]])
    Traceback (most recent call last):
           ...
    ValueError: shapes (2,3) and (2,1) not aligned: 3 (dim 1) != 2 (dim 0)

Passing a matrix with a list of strings example 2

    >>> matrix_mul([[2, 4, 6], [3, 6, 9]], [[1], ['2'], [3]])
    Traceback (most recent call last):
           ...
    TypeError: invalid data type for einsum

Passing a matrix with an empty list

    >>> matrix_mul([[12, 12, 12], [], [14, 14, 14]], [[2], [3], [8]])
    Traceback (most recent call last):
           ...
    ValueError: setting an array element with a sequence.

Passing a matrix which its rows have unequal size

    >>> matrix_mul([[2, 2, 2], [4, 4, 4]], [[2], [3, 3]])
    Traceback (most recent call last):
           ...
    ValueError: setting an array element with a sequence.

Passing two matrix that can't be multiplied

    >>> matrix_mul([[5, 2, 3], [7, 13, 2], [1, 0, 3]], [[2, 3], [6, 9]])
    Traceback (most recent call last):
           ...
    ValueError: shapes (3,3) and (2,2) not aligned: 3 (dim 1) != 2 (dim 0)

Missing an argument

    >>> matrix_mul([[1, 2]])
    Traceback (most recent call last):
                 ...
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

Passing no arguments

    >>> matrix_mul()
    Traceback (most recent call last):
                 ...
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
